//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2
//product.rs
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Serialize, Deserialize, Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "product")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub description: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::item::Entity")]
    Item,
}

impl Related<super::item::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Item.def()
    }
}
// Additional Implementations----------------------------------------------------------------------
#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct CreateProductInput {
    pub name: String,
    pub description: Option<String>,
}
#[derive(Debug, Serialize, Deserialize)]
pub struct UpdateProductInput {
    pub name: String,
    pub description: Option<String>,
}

// ------------------------------------------------------------------------------------------------

impl ActiveModelBehavior for ActiveModel {}
